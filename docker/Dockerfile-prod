# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

FROM python:3.8-alpine AS assets

COPY requirements.txt /app/requirements.txt
COPY docker/*.sh /usr/local/bin

# Install pure-Python, compiled, and OS package dependencies.  Use scanelf to
# uninstall any compile-time OS package dependencies and keep only the run-time
# OS package dependencies.
RUN install-deps.sh /app/requirements.txt

COPY . /app
RUN pip install --no-cache /app

ARG CIRCLE_SHA1
ARG CIRCLE_BUILD_URL
RUN echo "{ \
        \"commit\": \"$CIRCLE_SHA1\", \
        \"version\": \"$CIRCLE_SHA1\", \
        \"source\": \"https://github.com/mozilla-conduit/lando-ui\", \
        \"build\": \"$CIRCLE_BUILD_URL\" \
    } \
    " > /version.json

RUN apk add --update ruby && rm -rf /var/cache/apk/*
RUN gem install sass --no-document -v 3.4.25

ENV OIDC_DOMAIN=dontcare
ENV OIDC_CLIENT_ID=dontcare
ENV OIDC_CLIENT_SECRET=dontcare
ENV LANDO_API_OIDC_IDENTIFIER=dontcare
ENV FLASK_APP=/app/landoui/assets_app.py
RUN flask assets build

FROM python:3.8-alpine

COPY requirements.txt /app/requirements.txt
COPY docker/*.sh /usr/local/bin

# Install pure-Python, compiled, and OS package dependencies.  Use scanelf to
# uninstall any compile-time OS package dependencies and keep only the run-time
# OS package dependencies.
RUN install-deps.sh /app/requirements.txt

COPY . /app
RUN pip install --no-cache /app

COPY --from=assets /app/landoui/static/ /app/landoui/static/
COPY --from=assets /version.json /version.json
COPY --from=assets /version.json /app/version.json

EXPOSE 9000
CMD ["/usr/local/bin/uwsgi"]

RUN addgroup -g 10001 app && adduser -D -u 10001 -G app -h /app app

RUN chown -R app:app /app/landoui/static

# uWSGI configuration
ENV UWSGI_MODULE=landoui.wsgi:app \
	UWSGI_SOCKET=:9000 \
	UWSGI_MASTER=1 \
	UWSGI_WORKERS=2 \
	UWSGI_THREADS=8 \
    # Disable worker memory sharing optimizations.  They can cause memory leaks
    # and issues with packages like Sentry.
    # See https://discuss.newrelic.com/t/newrelic-agent-produces-system-error/43446
	UWSGI_LAZY_APPS=1 \
	UWSGI_WSGI_ENV_BEHAVIOR=holy \
    # Make uWSGI die instead of reload when it gets SIGTERM (fixed in uWSGI 2.1)
    UWSGI_DIE_ON_TERM=1 \
    # Check that the options we gave uWSGI are sane
    UWSGI_STRICT=1 \
    # Die if the application threw an exception on startup
    UWSGI_NEED_APP=1

# Run as a non-privileged user
USER app

WORKDIR /app
